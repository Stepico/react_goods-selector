{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearWithClick","setState","good","this","className","type","onClick","map","classNames","handleClick","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EASEC,eAAiB,WACf,EAAKC,SAAS,CAAEF,aAAc,MAVlC,iDAKE,SAAYG,GACVC,KAAKF,SAAS,CAAEF,aAAcG,MANlC,oBAaE,WAAU,IAAD,OACCH,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACGL,EAEG,qBAAIK,UAAU,sCAAd,oBACML,EADN,gBAIE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKH,oBAIlB,oBAAII,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAAAL,GAAI,OACb,qBACE,UAAQ,OAERE,UAAWI,IACT,CAAE,+BAAgCN,IAASH,IAJ/C,UAOE,6BACGG,IAASH,EAEN,wBACE,UAAQ,eACRM,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKN,eAJhB,eAUA,wBACE,UAAQ,YACRK,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKG,YAAYP,IAJlC,iBAWN,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA9BEA,iBAvCrB,GAAyBQ,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.db6ede13.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleClick(good: string) {\n    this.setState({ selectedGood: good });\n  }\n\n  clearWithClick = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearWithClick}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames(\n                  { 'has-background-success-light': good === selectedGood },\n                )}\n              >\n                <td>\n                  {good === selectedGood\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.clearWithClick}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.handleClick(good)}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}